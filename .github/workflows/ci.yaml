name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Compile
        run: cargo build --verbose

      - name: Compile tests
        run: cargo test --no-run

      - name: Test
        run: cargo test

      - name: Test with all features
        run: cargo test --all-features

      - name: Test with no default features
        run: cargo test --no-default-features

  rust:
    name: Lint and format Rust
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check --color=auto

      - name: Lint with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets

  text:
    name: Lint and format text
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Format with prettier
        run: npx prettier --check '**/*'

      - name: Format markdown with prettier
        run: npx prettier --prose-wrap always --check '**/*.md' '*.md'
