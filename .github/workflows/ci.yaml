---
name: CI
"on":
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Install Rust toolchain
        uses: artichoke/setup-rust/build-and-test@v1.11.0
        with:
          toolchain: stable

      - name: Compile
        run: cargo build --verbose

      - name: Compile tests
        run: cargo test --no-run

      - name: Test
        run: cargo test

      - name: Test with all features
        run: cargo test --all-features

      - name: Test with no default features
        run: cargo test --no-default-features

  build-msrv:
    name: Build (MSRV)
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Install Rust toolchain
        uses: artichoke/setup-rust/build-and-test@v1.11.0
        with:
          toolchain: "1.42.0"

      - name: Compile
        run: cargo build --verbose

      # skip tests because dev dependencies have a higher MSRV than boba does.
      - name: Compile tests
        if: false
        run: cargo test --no-run

      - name: Test
        if: false
        run: cargo test

      - name: Test with all features
        if: false
        run: cargo test --all-features

      - name: Test with no default features
        if: false
        run: cargo test --no-default-features

  rust-minimal-versions:
    name: Compile with minimum dependency versions
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Install Rust toolchain
        uses: artichoke/setup-rust/check-minimal-versions@v1.11.0
        with:
          toolchain: stable

      - name: Generate minimal versions lockfile
        run: cargo +nightly generate-lockfile -Z minimal-versions

      - name: Check with minimal versions
        run: cargo check --all-targets --profile=test

  rust:
    name: Lint and format Rust
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Install Rust toolchain
        uses: artichoke/setup-rust/lint-and-format@v1.11.0
        with:
          toolchain: stable

      - name: Check formatting
        run: cargo fmt --check

      - name: Lint with Clippy
        run: cargo clippy --workspace --all-features --all-targets

  ruby:
    name: Lint and format Ruby
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Install Ruby toolchain
        uses: ruby/setup-ruby@54a18e26dbbb1eabc604f317ade9a5788dddef81 # v1.159.0
        with:
          ruby-version: ".ruby-version"
          bundler-cache: true

      - name: Lint and check formatting with Rubocop
        run: bundle exec rubocop --format github

  text:
    name: Lint and format text
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Format with prettier
        run: npx prettier --check '**/*'

      - name: Lint YAML sources with yamllint
        run: |
          yamllint --version
          echo "Linting YAML sources with yamllint ..."
          yamllint --strict --format github .
          echo "OK"
